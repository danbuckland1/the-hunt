{"ast":null,"code":"import _classCallCheck from \"/Users/honeylo0ksfuhnee/Documents/Rutgers_Boot_Camp/the-hunt/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/honeylo0ksfuhnee/Documents/Rutgers_Boot_Camp/the-hunt/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/honeylo0ksfuhnee/Documents/Rutgers_Boot_Camp/the-hunt/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/honeylo0ksfuhnee/Documents/Rutgers_Boot_Camp/the-hunt/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/honeylo0ksfuhnee/Documents/Rutgers_Boot_Camp/the-hunt/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/honeylo0ksfuhnee/Documents/Rutgers_Boot_Camp/the-hunt/client/src/App.js\";\n//Dependencies\nimport React, { Component, Fragment } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\"; //Components\n\nimport Wrapper from \"./components/Wrapper\";\nimport Jumbotron from \"./components/Jumbotron\"; //Create/Join/Login form components\n\nimport CreateGame from \"./components/CreateGame\";\nimport JoinGame from \"./components/JoinGame\";\nimport LoginGame from \"./components/LoginGame\"; //Pages\n\nimport Activity from \"./pages/Activity\"; // import Challenges from \"./pages/Challenges\";\n//Google Button\n\nimport GoogleButton from \"./components/GoogleButton\"; //CSS file\n\nimport './App.css';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      isLoggedIn: false //KE Note: Temporary function that will change isLoggedIn state to true when called on.  We can change this later on.\n\n    };\n\n    _this.handleLogin = function () {\n      _this.setState({\n        isLoggedIn: true\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      //If state is NOT logged in then render homepage (with the logins)\n      return React.createElement(Wrapper, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, React.createElement(Jumbotron, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }), React.createElement(Router, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, React.createElement(Switch, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(Route, {\n        exact: true,\n        path: \"/\",\n        render: function render(props) {\n          _this2.state.isLoggedIn ? React.createElement(Activity, Object.assign({}, props, {\n            action: _this2.handleLogin,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 47\n            },\n            __self: this\n          })) : React.createElement(CreateGame, Object.assign({}, props, {\n            action: _this2.handleLogin,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 47\n            },\n            __self: this\n          }));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }), React.createElement(Route, {\n        exact: true,\n        path: \"/join\",\n        render: function render() {\n          return React.createElement(JoinGame, {\n            action: _this2.handleLogin,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 50\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }), React.createElement(Route, {\n        exact: true,\n        path: \"/login\",\n        render: function render() {\n          return React.createElement(LoginGame, {\n            action: _this2.handleLogin,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 51\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }), this.state.isLoggedIn ? React.createElement(Route, {\n        exact: true,\n        path: \"/activity\",\n        component: Activity,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }) : React.createElement(Route, {\n        exact: true,\n        path: \"/\",\n        component: CreateGame,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }), React.createElement(Route, {\n        exact: true,\n        path: \"/auth/google\",\n        render: function render() {\n          return React.createElement(GoogleButton, {\n            action: _this2.handleauth,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 55\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      })))));\n    }\n  }]);\n\n  return App;\n}(Component); //End App component\n\n\nexport default App;","map":{"version":3,"sources":["/Users/honeylo0ksfuhnee/Documents/Rutgers_Boot_Camp/the-hunt/client/src/App.js"],"names":["React","Component","Fragment","BrowserRouter","Router","Route","Switch","Wrapper","Jumbotron","CreateGame","JoinGame","LoginGame","Activity","GoogleButton","App","state","isLoggedIn","handleLogin","setState","props","handleauth"],"mappings":"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","sourcesContent":["//Dependencies\nimport React, { Component, Fragment } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n//Components\nimport Wrapper from \"./components/Wrapper\";\nimport Jumbotron from \"./components/Jumbotron\";\n//Create/Join/Login form components\nimport CreateGame from \"./components/CreateGame\";\nimport JoinGame from \"./components/JoinGame\";\nimport LoginGame from \"./components/LoginGame\";\n//Pages\nimport Activity from \"./pages/Activity\";\n// import Challenges from \"./pages/Challenges\";\n//Google Button\nimport GoogleButton from \"./components/GoogleButton\";\n//CSS file\nimport './App.css';\n\n\n\nclass App extends Component {\n    //sets state of app to not logged in by default\n    //KE Note: This is a temporary setup to test and see that the right page renders when a user is logged in.  We can change the setup as we incorporate authentication\n    state = {\n      isLoggedIn: false\n  }\n\n  //KE Note: Temporary function that will change isLoggedIn state to true when called on.  We can change this later on.\n   handleLogin = () => {\n    this.setState({\n      isLoggedIn: true\n    })\n  }\n\n  render() {\n    //If state is NOT logged in then render homepage (with the logins)\n      return (\n        <Wrapper>\n        <Jumbotron />\n        <Router>\n          <Fragment>\n            <Switch>\n              {/* Passes along handleLogin function as a prop to CreateGame component */}\n              <Route exact path=\"/\" render = {(props) => \n                {\n                  this.state.isLoggedIn?\n                     (<Activity {...props} action={this.handleLogin}/>) : (<CreateGame {...props} action={this.handleLogin}/>)\n                  }\n                }/>\n              <Route exact path=\"/join\" render = {() => <JoinGame action={this.handleLogin}/> }/>\n              <Route exact path=\"/login\" render = {() => <LoginGame action={this.handleLogin}/> }/>\n              {this.state.isLoggedIn ?\n                <Route exact path = \"/activity\" component={Activity} /> : <Route exact path = \"/\" component={CreateGame} />\n              }\n              <Route exact path=\"/auth/google\" render = {() => <GoogleButton action={this.handleauth}/> }/>\n            </Switch>\n          </Fragment>\n        </Router>\n        </Wrapper>\n      );\n  }\n\n\n}//End App component\n\nexport default App;"]},"metadata":{},"sourceType":"module"}