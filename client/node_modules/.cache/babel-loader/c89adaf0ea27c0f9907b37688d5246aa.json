{"ast":null,"code":"import axios from \"axios\";\nexport default {\n  createGame: function createGame(gameName) {\n    return axios.post(\"/api/newgame\", {\n      gameName: gameName\n    });\n  },\n  pullGame: function pullGame(gameID) {\n    return axios.get(\"/api/pullgame/\" + decodeURIComponent(gameID));\n  },\n  createTeam: function createTeam(teamName, gameID, googleID) {\n    //Create logic for team name check and creation\n    return axios.post(\"/api/newteam\", {\n      teamName: teamName,\n      gameID: gameID,\n      googleID: googleID\n    });\n  },\n  insertTeam: function insertTeam(gameID, teamID) {\n    return axios.post(\"/api/insertteam\", {\n      gameID: gameID,\n      teamID: teamID\n    });\n  },\n  pullTeam: function pullTeam(gameID, teamName) {\n    return axios.get(\"/api/pullTeam/\" + decodeURIComponent(gameID) + \"/\" + decodeURIComponent(teamName));\n  },\n  authenticate: function authenticate() {\n    return axios.get(\"/api/email\");\n  },\n  createGoogleUser: function createGoogleUser() {\n    return axios.get(\"http://localhost:3001/auth/google/\");\n  },\n  createChallenges: function createChallenges(teamID, gameID, _ref) {\n    var id = _ref.id,\n        title = _ref.title,\n        complete = _ref.complete,\n        photoURL = _ref.photoURL,\n        description = _ref.description,\n        value = _ref.value;\n    return axios.post(\"/api/newchallenges\", {\n      teamId: teamID,\n      gameID: gameID,\n      set: {\n        challengeID: id,\n        challengeTitle: title,\n        complete: complete,\n        photoURL: photoURL,\n        description: description,\n        value: value\n      }\n    });\n  }\n}; //END export default","map":{"version":3,"sources":["/Users/honeylo0ksfuhnee/Documents/Rutgers_Boot_Camp/the-hunt/client/src/utils/API.js"],"names":["axios","createGame","gameName","post","pullGame","gameID","get","decodeURIComponent","createTeam","teamName","googleID","insertTeam","teamID","pullTeam","authenticate","createGoogleUser","createChallenges","id","title","complete","photoURL","description","value","teamId","set","challengeID","challengeTitle"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEC,eAAc;AACXC,EAAAA,UAAU,EAAE,oBAACC,QAAD,EAAc;AACtB,WAAOF,KAAK,CAACG,IAAN,CAAW,cAAX,EAA2B;AAACD,MAAAA,QAAQ,EAAEA;AAAX,KAA3B,CAAP;AACH,GAHU;AAIXE,EAAAA,QAAQ,EAAE,kBAACC,MAAD,EAAY;AAClB,WAAOL,KAAK,CAACM,GAAN,CAAU,mBAAmBC,kBAAkB,CAACF,MAAD,CAA/C,CAAP;AACH,GANU;AAOXG,EAAAA,UAAU,EAAE,oBAACC,QAAD,EAAWJ,MAAX,EAAmBK,QAAnB,EAAgC;AACxC;AACA,WAAOV,KAAK,CAACG,IAAN,CAAW,cAAX,EAA2B;AAACM,MAAAA,QAAQ,EAAEA,QAAX;AAAqBJ,MAAAA,MAAM,EAAEA,MAA7B;AAAqCK,MAAAA,QAAQ,EAAEA;AAA/C,KAA3B,CAAP;AACH,GAVU;AAWXC,EAAAA,UAAU,EAAE,oBAACN,MAAD,EAASO,MAAT,EAAoB;AAC5B,WAAOZ,KAAK,CAACG,IAAN,CAAW,iBAAX,EAA6B;AAACE,MAAAA,MAAM,EAAEA,MAAT;AAAiBO,MAAAA,MAAM,EAAEA;AAAzB,KAA7B,CAAP;AAEH,GAdU;AAeXC,EAAAA,QAAQ,EAAE,kBAACR,MAAD,EAASI,QAAT,EAAqB;AAC3B,WAAOT,KAAK,CAACM,GAAN,CAAU,mBAAmBC,kBAAkB,CAACF,MAAD,CAArC,GAAgD,GAAhD,GAAsDE,kBAAkB,CAACE,QAAD,CAAlF,CAAP;AACH,GAjBU;AAkBXK,EAAAA,YAAY,EAAE,wBAAK;AACf,WAAOd,KAAK,CAACM,GAAN,CAAU,YAAV,CAAP;AACH,GApBU;AAqBXS,EAAAA,gBAAgB,EAAE,4BAAM;AACpB,WAAOf,KAAK,CAACM,GAAN,CAAU,oCAAV,CAAP;AACH,GAvBU;AAwBXU,EAAAA,gBAAgB,EAAE,0BAACJ,MAAD,EAASP,MAAT,QAA0E;AAAA,QAAvDY,EAAuD,QAAvDA,EAAuD;AAAA,QAAnDC,KAAmD,QAAnDA,KAAmD;AAAA,QAA5CC,QAA4C,QAA5CA,QAA4C;AAAA,QAAlCC,QAAkC,QAAlCA,QAAkC;AAAA,QAAxBC,WAAwB,QAAxBA,WAAwB;AAAA,QAAXC,KAAW,QAAXA,KAAW;AACxF,WAAOtB,KAAK,CAACG,IAAN,CAAW,oBAAX,EACH;AACIoB,MAAAA,MAAM,EAAEX,MADZ;AAEIP,MAAAA,MAAM,EAAEA,MAFZ;AAGImB,MAAAA,GAAG,EAAE;AACDC,QAAAA,WAAW,EAAER,EADZ;AAEDS,QAAAA,cAAc,EAAER,KAFf;AAGDC,QAAAA,QAAQ,EAAEA,QAHT;AAIDC,QAAAA,QAAQ,EAAEA,QAJT;AAKDC,QAAAA,WAAW,EAAEA,WALZ;AAMDC,QAAAA,KAAK,EAAEA;AANN;AAHT,KADG,CAAP;AAcH;AAvCU,CAAd,C,CAwCE","sourcesContent":["import axios from \"axios\";\n\n export default{\n    createGame: (gameName) => {\n        return axios.post(\"/api/newgame\", {gameName: gameName})\n    },\n    pullGame: (gameID) => {\n        return axios.get(\"/api/pullgame/\" + decodeURIComponent(gameID))\n    },\n    createTeam: (teamName, gameID, googleID) => {\n        //Create logic for team name check and creation\n        return axios.post(\"/api/newteam\", {teamName: teamName, gameID: gameID, googleID: googleID})\n    },\n    insertTeam: (gameID, teamID) => {\n        return axios.post(\"/api/insertteam\",{gameID: gameID, teamID: teamID})\n        \n    },\n    pullTeam: (gameID, teamName) =>{\n        return axios.get(\"/api/pullTeam/\" + decodeURIComponent(gameID) + \"/\" + decodeURIComponent(teamName));\n    },\n    authenticate: () =>{\n        return axios.get(\"/api/email\");\n    },\n    createGoogleUser: () => {\n        return axios.get(\"http://localhost:3001/auth/google/\")\n    },\n    createChallenges: (teamID, gameID, { id, title, complete, photoURL, description, value}) => {\n        return axios.post(\"/api/newchallenges\",\n            {\n                teamId: teamID,\n                gameID: gameID,\n                set: {\n                    challengeID: id,\n                    challengeTitle: title,\n                    complete: complete,\n                    photoURL: photoURL,\n                    description: description,\n                    value: value\n                }\n            }\n        );\n    }\n };//END export default"]},"metadata":{},"sourceType":"module"}