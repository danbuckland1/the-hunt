{"ast":null,"code":"import _classCallCheck from \"/Users/honeylo0ksfuhnee/Documents/Rutgers_Boot_Camp/the-hunt/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/honeylo0ksfuhnee/Documents/Rutgers_Boot_Camp/the-hunt/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/honeylo0ksfuhnee/Documents/Rutgers_Boot_Camp/the-hunt/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/honeylo0ksfuhnee/Documents/Rutgers_Boot_Camp/the-hunt/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/honeylo0ksfuhnee/Documents/Rutgers_Boot_Camp/the-hunt/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/honeylo0ksfuhnee/Documents/Rutgers_Boot_Camp/the-hunt/client/src/App.js\";\n//Dependencies\nimport React, { Component, Fragment } from \"react\";\nimport { BrowserRouter as Router, Route, Switch, Redirect } from \"react-router-dom\"; //Components\n\nimport Wrapper from \"./components/Wrapper\"; //Create/Join/Login form components\n\nimport CreateGame from \"./components/CreateGame\";\nimport JoinGame from \"./components/JoinGame\";\nimport LoginGame from \"./components/LoginGame\"; //Pages\n\nimport Game from \"./pages/Game\"; //Google Button\n\nimport GoogleButton from \"./components/GoogleButton\"; //CSS file\n\nimport \"./App.css\";\nimport API from \"./utils/API\";\nimport fire from \"./firebase.js\";\nimport challTemplate from \"./challenges.json\";\nvar database = fire.database().ref(\"log\");\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      isLoggedIn: false,\n      gameName: \"\",\n      gameID: \"\",\n      teamName: \"Team1\",\n      teamID: \"\",\n      googleID: \"\",\n      redirect: false\n    };\n\n    _this.handleLogin = function () {\n      _this.setState({\n        isLoggedIn: true\n      });\n    };\n\n    _this.handleGoogleCreate = function () {\n      API.authenticate().then(function (res) {\n        if (res.data.user.googleId) {\n          var googleid = res.data.user.googleId;\n\n          _this.setState({\n            googleID: googleid\n          });\n        } else {\n          console.log(\"No googleId yet\");\n        }\n      });\n    };\n\n    _this.handleCreateGame = function () {\n      //API call that creates game in database\n      API.createGame(_this.state.gameName).then(function (res) {\n        //Sets state to gameID from newly created game\n        _this.setState({\n          gameID: res.data._id\n        });\n      }).then(function () {\n        return _this.handleTeamNameCheck();\n      });\n    };\n\n    _this.captureGameName = function (event) {\n      var gameName = event.target.value;\n\n      _this.setState({\n        gameName: gameName\n      });\n    };\n\n    _this.handleCaptureGameID = function (event) {\n      var gameID = event.target.value;\n\n      _this.setState({\n        gameID: gameID\n      });\n    };\n\n    _this.handleJoinGame = function () {\n      //Check to see if game exists\n      API.pullGame(_this.state.gameID).then(function (res) {\n        // console.log(res);\n        //If it does...\n        if (res) {\n          //set redirect state to true\n          _this.handleTeamNameCheck();\n        } //END of if(res)\n        else {\n            console.log(\"Game does not exist.  Please check ID.\");\n          }\n      });\n    };\n\n    _this.handleCreateTeam = function (teamName, gameID, googleID) {\n      //API function that creates a team and associates it with a gameID\n      API.createTeam(teamName, gameID, googleID) //Then takes new team record and sets teamID state to teamID in database\n      .then(function (res) {\n        _this.setState({\n          teamID: res.data._id\n        });\n      }) //Then takes gameID and teamID to add team to a game record\n      .then(function () {\n        API.insertTeam(_this.state.gameID, _this.state.teamID);\n      }).then(function () {\n        _this.handleTeamJoinMsg();\n      }) //Then moves user to game as logged in\n      .then(function () {\n        return _this.handleLogin();\n      });\n    };\n\n    _this.handleTeamNameGeneration = function (dbGameID, dbTeamName) {\n      var teamNums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]; //Loop through array of numbers until....\n\n      for (var i = 0; i < teamNums.length; i++) {\n        var teamName = \"Team\" + teamNums[i];\n        console.log(teamName);\n\n        if (_this.state.gameID === dbGameID && teamName === dbTeamName) {\n          console.log(teamName + \" already exists.\");\n        } //...You reach a Teamnumber that doesn't yet exist in the database and return that\n        else {\n            console.log(\"Adding \" + teamName + \" to database\");\n            return teamName;\n          }\n      }\n    };\n\n    _this.handleTeamNameCheck = function () {\n      //Check to see if Team Name with matching game ID exists\n      API.pullTeam(_this.state.gameID, _this.state.teamName).then(function (res) {\n        //If it does...\n        if (res.data) {\n          //Generate a new team name\n          var newTeamName = _this.handleTeamNameGeneration(res.data.gameID, res.data.teamName); //Set teamName state to new team name\n\n\n          _this.setState({\n            teamName: newTeamName\n          }); //Use new team name and game ID to create a new team record\n\n\n          _this.handleCreateTeam(newTeamName, _this.state.gameID, _this.state.googleID);\n        } //If it doesn't...\n        else {\n            //Create a team using gameID and Team 1\n            _this.handleCreateTeam(_this.state.teamName, _this.state.gameID, _this.state.googleID);\n          }\n      });\n    };\n\n    _this.handleTeamJoinMsg = function () {\n      var message = {\n        teamName: \"GAME ANNOUNCEMENT\",\n        text: _this.state.teamName + \" has joined the game.\"\n      };\n      database.push(message);\n    };\n\n    _this.gameID = _this.state.gameID;\n\n    _this.handleCreateChallenges = function () {\n      API.createChallenges(_this.state.teamID, _this.state.gameID, set);\n    };\n\n    _this.handleRenderChallenges = function () {};\n\n    _this.handleUpdateChallenges = function () {};\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.handleGoogleCreate();\n    } //====================FUNCTIONS FOR LOGIN====================\n    //KE Note: Temporary function that will change isLoggedIn state to true when called on.  We can change this later on.\n\n  }, {\n    key: \"render\",\n    //====================RENDER TO PAGE====================\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(Wrapper, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210\n        },\n        __self: this\n      }, React.createElement(Router, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211\n        },\n        __self: this\n      }, React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      }, React.createElement(Switch, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213\n        },\n        __self: this\n      }, React.createElement(Route, {\n        exact: true,\n        path: \"/\",\n        render: function render(props) {\n          return _this2.state.isLoggedIn ? React.createElement(Redirect, {\n            to: \"/game/\".concat(_this2.state.gameID, \"/\").concat(_this2.state.teamName),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 221\n            },\n            __self: this\n          }) : React.createElement(GoogleButton, Object.assign({}, props, {\n            gameID: _this2.state.gameID,\n            handleLogin: _this2.handleLogin,\n            handleTeamNameCheck: _this2.handleTeamNameCheck,\n            handleGoogleCreate: _this2.handleGoogleCreate,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 223\n            },\n            __self: this\n          }));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/game/:gameid/:teamname\",\n        render: function render(props) {\n          return _this2.state.isLoggedIn ? React.createElement(Game, Object.assign({}, props, {\n            handleLogin: _this2.handleLogin,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 236\n            },\n            __self: this\n          })) : React.createElement(Redirect, {\n            to: \"/\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 238\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232\n        },\n        __self: this\n      }), React.createElement(Route, {\n        exact: true,\n        path: \"/create\",\n        render: function render(props) {\n          return _this2.state.isLoggedIn ? React.createElement(Redirect, {\n            to: \"/game/\".concat(_this2.state.gameID, \"/\").concat(_this2.state.teamName),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 247\n            },\n            __self: this\n          }) : React.createElement(CreateGame, Object.assign({}, props, {\n            handleCreateGame: _this2.handleCreateGame,\n            captureGameName: _this2.captureGameName,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 249\n            },\n            __self: this\n          }));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242\n        },\n        __self: this\n      }), React.createElement(Route, {\n        exact: true,\n        path: \"/join\",\n        render: function render(props) {\n          return _this2.state.isLoggedIn ? React.createElement(Redirect, {\n            to: \"/game/\".concat(_this2.state.gameID, \"/\").concat(_this2.state.teamName),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 262\n            },\n            __self: this\n          }) : React.createElement(JoinGame, Object.assign({}, props, {\n            handleCaptureGameID: _this2.handleCaptureGameID,\n            handleJoinGame: _this2.handleJoinGame,\n            handleRedirect: _this2.handleRedirect,\n            gameID: _this2.state.gameID,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 264\n            },\n            __self: this\n          }));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257\n        },\n        __self: this\n      }), \"/>\", React.createElement(Route, {\n        exact: true,\n        path: \"/logingame\",\n        render: function render(props) {\n          return _this2.state.isLoggedIn ? React.createElement(Redirect, {\n            to: \"/game/\".concat(_this2.state.gameID, \"/\").concat(_this2.state.teamName),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 279\n            },\n            __self: this\n          }) : React.createElement(LoginGame, Object.assign({}, props, {\n            handleCreateGame: _this2.handleCreateGame,\n            captureGameName: _this2.captureGameName,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 281\n            },\n            __self: this\n          }));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274\n        },\n        __self: this\n      })))));\n    }\n  }]);\n\n  return App;\n}(Component); //End App component\n\n\nexport default App;","map":{"version":3,"sources":["/Users/honeylo0ksfuhnee/Documents/Rutgers_Boot_Camp/the-hunt/client/src/App.js"],"names":["React","Component","Fragment","BrowserRouter","Router","Route","Switch","Redirect","Wrapper","CreateGame","JoinGame","LoginGame","Game","GoogleButton","API","fire","challTemplate","database","ref","App","state","isLoggedIn","gameName","gameID","teamName","teamID","googleID","redirect","handleLogin","setState","handleGoogleCreate","authenticate","then","res","data","user","googleId","googleid","console","log","handleCreateGame","createGame","_id","handleTeamNameCheck","captureGameName","event","target","value","handleCaptureGameID","handleJoinGame","pullGame","handleCreateTeam","createTeam","insertTeam","handleTeamJoinMsg","handleTeamNameGeneration","dbGameID","dbTeamName","teamNums","i","length","pullTeam","newTeamName","message","text","push","handleCreateChallenges","createChallenges","set","handleRenderChallenges","handleUpdateChallenges","props","handleRedirect"],"mappings":";;;;;;AAAA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SACEC,aAAa,IAAIC,MADnB,EAEEC,KAFF,EAGEC,MAHF,EAIEC,QAJF,QAKO,kBALP,C,CAMA;;AACA,OAAOC,OAAP,MAAoB,sBAApB,C,CACA;;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,SAAP,MAAsB,wBAAtB,C,CACA;;AACA,OAAOC,IAAP,MAAiB,cAAjB,C,CACA;;AACA,OAAOC,YAAP,MAAyB,2BAAzB,C,CACA;;AACA,OAAO,WAAP;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,OAAOC,IAAP,MAAiB,eAAjB;AACA,OAAOC,aAAP,MAA0B,mBAA1B;AAEA,IAAMC,QAAQ,GAAGF,IAAI,CAACE,QAAL,GAAgBC,GAAhB,CAAoB,KAApB,CAAjB;;IAEMC,G;;;;;;;;;;;;;;;;;UAGJC,K,GAAQ;AACNC,MAAAA,UAAU,EAAE,KADN;AAENC,MAAAA,QAAQ,EAAE,EAFJ;AAGNC,MAAAA,MAAM,EAAE,EAHF;AAINC,MAAAA,QAAQ,EAAE,OAJJ;AAKNC,MAAAA,MAAM,EAAC,EALD;AAMNC,MAAAA,QAAQ,EAAC,EANH;AAONC,MAAAA,QAAQ,EAAE;AAPJ,K;;UAgBRC,W,GAAc,YAAM;AAClB,YAAKC,QAAL,CAAc;AACZR,QAAAA,UAAU,EAAE;AADA,OAAd;AAGD,K;;UAGDS,kB,GAAqB,YAAM;AACzBhB,MAAAA,GAAG,CAACiB,YAAJ,GACCC,IADD,CACO,UAAAC,GAAG,EAAI;AACZ,YAAGA,GAAG,CAACC,IAAJ,CAASC,IAAT,CAAcC,QAAjB,EAA0B;AACxB,cAAIC,QAAQ,GAAGJ,GAAG,CAACC,IAAJ,CAASC,IAAT,CAAcC,QAA7B;;AACA,gBAAKP,QAAL,CAAc;AACZH,YAAAA,QAAQ,EAAEW;AADE,WAAd;AAGD,SALD,MAMI;AACFC,UAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACD;AACF,OAXD;AAYD,K;;UAIDC,gB,GAAmB,YAAM;AACvB;AACA1B,MAAAA,GAAG,CAAC2B,UAAJ,CAAe,MAAKrB,KAAL,CAAWE,QAA1B,EACGU,IADH,CACS,UAAAC,GAAG,EAAI;AACZ;AACA,cAAKJ,QAAL,CAAc;AACZN,UAAAA,MAAM,EAAEU,GAAG,CAACC,IAAJ,CAASQ;AADL,SAAd;AAGD,OANH,EAOGV,IAPH,CAOS;AAAA,eAAM,MAAKW,mBAAL,EAAN;AAAA,OAPT;AAQD,K;;UAGDC,e,GAAkB,UAACC,KAAD,EAAW;AAC3B,UAAIvB,QAAQ,GAAGuB,KAAK,CAACC,MAAN,CAAaC,KAA5B;;AACA,YAAKlB,QAAL,CAAc;AACZP,QAAAA,QAAQ,EAAEA;AADE,OAAd;AAGD,K;;UAGD0B,mB,GAAsB,UAACH,KAAD,EAAW;AAC/B,UAAItB,MAAM,GAAGsB,KAAK,CAACC,MAAN,CAAaC,KAA1B;;AACA,YAAKlB,QAAL,CAAc;AACZN,QAAAA,MAAM,EAAEA;AADI,OAAd;AAGD,K;;UAGD0B,c,GAAiB,YAAM;AACrB;AACAnC,MAAAA,GAAG,CAACoC,QAAJ,CAAa,MAAK9B,KAAL,CAAWG,MAAxB,EACKS,IADL,CACU,UAAAC,GAAG,EAAI;AACT;AACA;AACA,YAAGA,GAAH,EAAQ;AACN;AACA,gBAAKU,mBAAL;AAED,SAJD,CAIC;AAJD,aAKK;AACHL,YAAAA,OAAO,CAACC,GAAR,CAAY,wCAAZ;AACD;AACJ,OAZL;AAcD,K;;UAIDY,gB,GAAmB,UAAC3B,QAAD,EAAWD,MAAX,EAAmBG,QAAnB,EAAgC;AACnD;AACEZ,MAAAA,GAAG,CAACsC,UAAJ,CAAe5B,QAAf,EAAyBD,MAAzB,EAAiCG,QAAjC,EACE;AADF,OAEGM,IAFH,CAES,UAAAC,GAAG,EAAI;AACV,cAAKJ,QAAL,CAAe;AACXJ,UAAAA,MAAM,EAAEQ,GAAG,CAACC,IAAJ,CAASQ;AADN,SAAf;AAGH,OANH,EAOE;AAPF,OAQGV,IARH,CAQS,YAAM;AACTlB,QAAAA,GAAG,CAACuC,UAAJ,CAAe,MAAKjC,KAAL,CAAWG,MAA1B,EAAkC,MAAKH,KAAL,CAAWK,MAA7C;AACH,OAVH,EAWGO,IAXH,CAWU,YAAM;AACV,cAAKsB,iBAAL;AACH,OAbH,EAcE;AAdF,OAeGtB,IAfH,CAeS;AAAA,eAAM,MAAKJ,WAAL,EAAN;AAAA,OAfT;AAgBD,K;;UAID2B,wB,GAA0B,UAACC,QAAD,EAAWC,UAAX,EAA0B;AAClD,UAAIC,QAAQ,GAAG,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,EAAsB,CAAtB,EAAyB,CAAzB,EAA4B,EAA5B,CAAf,CADkD,CAElD;;AACA,WAAK,IAAIC,CAAC,GAAC,CAAX,EAAcA,CAAC,GAAGD,QAAQ,CAACE,MAA3B,EAAmCD,CAAC,EAApC,EAAuC;AACnC,YAAInC,QAAQ,GAAG,SAASkC,QAAQ,CAACC,CAAD,CAAhC;AACArB,QAAAA,OAAO,CAACC,GAAR,CAAYf,QAAZ;;AACA,YAAG,MAAKJ,KAAL,CAAWG,MAAX,KAAsBiC,QAAtB,IAAkChC,QAAQ,KAAKiC,UAAlD,EAA6D;AACzDnB,UAAAA,OAAO,CAACC,GAAR,CAAYf,QAAQ,GAAG,kBAAvB;AACH,SAFD,CAGA;AAHA,aAII;AACAc,YAAAA,OAAO,CAACC,GAAR,CAAY,YAAYf,QAAZ,GAAuB,cAAnC;AACA,mBAAOA,QAAP;AACH;AACJ;AACF,K;;UAGDmB,mB,GAAsB,YAAM;AAC1B;AACA7B,MAAAA,GAAG,CAAC+C,QAAJ,CAAa,MAAKzC,KAAL,CAAWG,MAAxB,EAAgC,MAAKH,KAAL,CAAWI,QAA3C,EACCQ,IADD,CACO,UAAAC,GAAG,EAAI;AACZ;AACA,YAAGA,GAAG,CAACC,IAAP,EAAY;AACV;AACA,cAAI4B,WAAW,GAAG,MAAKP,wBAAL,CAA8BtB,GAAG,CAACC,IAAJ,CAASX,MAAvC,EAA+CU,GAAG,CAACC,IAAJ,CAASV,QAAxD,CAAlB,CAFU,CAGV;;;AACA,gBAAKK,QAAL,CAAe;AACXL,YAAAA,QAAQ,EAAEsC;AADC,WAAf,EAJU,CAOV;;;AACA,gBAAKX,gBAAL,CAAsBW,WAAtB,EAAmC,MAAK1C,KAAL,CAAWG,MAA9C,EAAsD,MAAKH,KAAL,CAAWM,QAAjE;AACD,SATD,CAUA;AAVA,aAWK;AACH;AACA,kBAAKyB,gBAAL,CAAsB,MAAK/B,KAAL,CAAWI,QAAjC,EAA2C,MAAKJ,KAAL,CAAWG,MAAtD,EAA8D,MAAKH,KAAL,CAAWM,QAAzE;AACD;AACF,OAlBD;AAmBD,K;;UAED4B,iB,GAAoB,YAAM;AACxB,UAAIS,OAAO,GAAG;AACZvC,QAAAA,QAAQ,EAAE,mBADE;AAEZwC,QAAAA,IAAI,EAAE,MAAK5C,KAAL,CAAWI,QAAX,GAAsB;AAFhB,OAAd;AAIAP,MAAAA,QAAQ,CAACgD,IAAT,CAAcF,OAAd;AACD,K;;UAEDxC,M,GAAS,MAAKH,KAAL,CAAWG,M;;UAGpB2C,sB,GAAyB,YAAM;AAG7BpD,MAAAA,GAAG,CAACqD,gBAAJ,CAAqB,MAAK/C,KAAL,CAAWK,MAAhC,EAAwC,MAAKL,KAAL,CAAWG,MAAnD,EAA2D6C,GAA3D;AACD,K;;UAEDC,sB,GAAyB,YAAM,CAE9B,C;;UAEDC,sB,GAAyB,YAAK,CAE7B,C;;;;;;;wCArKkB;AACjB,WAAKxC,kBAAL;AACD,K,CAED;AACA;;;;AAkKF;6BACW;AAAA;;AACP,aACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAGE,oBAAC,KAAD;AACE,QAAA,KAAK,MADP;AAEE,QAAA,IAAI,EAAC,GAFP;AAGE,QAAA,MAAM,EAAE,gBAAAyC,KAAK;AAAA,iBACX,MAAI,CAACnD,KAAL,CAAWC,UAAX,GACE,oBAAC,QAAD;AAAU,YAAA,EAAE,kBAAW,MAAI,CAACD,KAAL,CAAWG,MAAtB,cAAgC,MAAI,CAACH,KAAL,CAAWI,QAA3C,CAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,GAGE,oBAAC,YAAD,oBACM+C,KADN;AAEE,YAAA,MAAM,EAAE,MAAI,CAACnD,KAAL,CAAWG,MAFrB;AAGE,YAAA,WAAW,EAAE,MAAI,CAACK,WAHpB;AAIE,YAAA,mBAAmB,EAAE,MAAI,CAACe,mBAJ5B;AAKE,YAAA,kBAAkB,EAAE,MAAI,CAACb,kBAL3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAJS;AAAA,SAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHF,EAmBE,oBAAC,KAAD;AACE,QAAA,IAAI,EAAC,yBADP;AAEE,QAAA,MAAM,EAAE,gBAAAyC,KAAK;AAAA,iBACX,MAAI,CAACnD,KAAL,CAAWC,UAAX,GACE,oBAAC,IAAD,oBAAUkD,KAAV;AAAiB,YAAA,WAAW,EAAE,MAAI,CAAC3C,WAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,GAGE,oBAAC,QAAD;AAAU,YAAA,EAAE,EAAC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJS;AAAA,SAFf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAnBF,EA6BE,oBAAC,KAAD;AACE,QAAA,KAAK,MADP;AAEE,QAAA,IAAI,EAAC,SAFP;AAGE,QAAA,MAAM,EAAE,gBAAA2C,KAAK;AAAA,iBACX,MAAI,CAACnD,KAAL,CAAWC,UAAX,GACE,oBAAC,QAAD;AAAU,YAAA,EAAE,kBAAW,MAAI,CAACD,KAAL,CAAWG,MAAtB,cAAgC,MAAI,CAACH,KAAL,CAAWI,QAA3C,CAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,GAGE,oBAAC,UAAD,oBACM+C,KADN;AAEE,YAAA,gBAAgB,EAAE,MAAI,CAAC/B,gBAFzB;AAGE,YAAA,eAAe,EAAE,MAAI,CAACI,eAHxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAJS;AAAA,SAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QA7BF,EA4CE,oBAAC,KAAD;AACE,QAAA,KAAK,MADP;AAEE,QAAA,IAAI,EAAC,OAFP;AAGE,QAAA,MAAM,EAAE,gBAAA2B,KAAK;AAAA,iBACX,MAAI,CAACnD,KAAL,CAAWC,UAAX,GACE,oBAAC,QAAD;AAAU,YAAA,EAAE,kBAAW,MAAI,CAACD,KAAL,CAAWG,MAAtB,cAAgC,MAAI,CAACH,KAAL,CAAWI,QAA3C,CAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,GAGE,oBAAC,QAAD,oBACI+C,KADJ;AAEA,YAAA,mBAAmB,EAAE,MAAI,CAACvB,mBAF1B;AAGA,YAAA,cAAc,EAAE,MAAI,CAACC,cAHrB;AAIA,YAAA,cAAc,EAAE,MAAI,CAACuB,cAJrB;AAKA,YAAA,MAAM,EAAE,MAAI,CAACpD,KAAL,CAAWG,MALnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAJS;AAAA,SAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QA5CF,QA6DE,oBAAC,KAAD;AACE,QAAA,KAAK,MADP;AAEE,QAAA,IAAI,EAAC,YAFP;AAGE,QAAA,MAAM,EAAE,gBAAAgD,KAAK;AAAA,iBACX,MAAI,CAACnD,KAAL,CAAWC,UAAX,GACE,oBAAC,QAAD;AAAU,YAAA,EAAE,kBAAW,MAAI,CAACD,KAAL,CAAWG,MAAtB,cAAgC,MAAI,CAACH,KAAL,CAAWI,QAA3C,CAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,GAGE,oBAAC,SAAD,oBACM+C,KADN;AAEE,YAAA,gBAAgB,EAAE,MAAI,CAAC/B,gBAFzB;AAGE,YAAA,eAAe,EAAE,MAAI,CAACI,eAHxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAJS;AAAA,SAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QA7DF,CADF,CADF,CADF,CADF;AAqFD;;;;EA3Qe3C,S,GA4QhB;;;AAEF,eAAekB,GAAf","sourcesContent":["//Dependencies\nimport React, { Component, Fragment } from \"react\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n  Redirect\n} from \"react-router-dom\";\n//Components\nimport Wrapper from \"./components/Wrapper\";\n//Create/Join/Login form components\nimport CreateGame from \"./components/CreateGame\";\nimport JoinGame from \"./components/JoinGame\";\nimport LoginGame from \"./components/LoginGame\";\n//Pages\nimport Game from \"./pages/Game\";\n//Google Button\nimport GoogleButton from \"./components/GoogleButton\";\n//CSS file\nimport \"./App.css\";\nimport API from \"./utils/API\";\nimport fire from \"./firebase.js\";\nimport challTemplate from \"./challenges.json\";\n\nconst database = fire.database().ref(\"log\");\n\nclass App extends Component {\n  //sets state of app to not logged in by default\n  //KE Note: This is a temporary setup to test and see that the right page renders when a user is logged in.  We can change the setup as we incorporate authentication\n  state = {\n    isLoggedIn: false,\n    gameName: \"\",\n    gameID: \"\",\n    teamName: \"Team1\",\n    teamID:\"\",\n    googleID:\"\",\n    redirect: false\n  };\n\n  componentDidMount(){\n    this.handleGoogleCreate()\n  }\n\n  //====================FUNCTIONS FOR LOGIN====================\n  //KE Note: Temporary function that will change isLoggedIn state to true when called on.  We can change this later on.\n  handleLogin = () => {\n    this.setState({\n      isLoggedIn: true\n    });\n  };\n\n//Function that captures googleID so that teams and games can be created later on\n  handleGoogleCreate = () => {\n    API.authenticate()\n    .then( res => {\n      if(res.data.user.googleId){\n        let googleid = res.data.user.googleId\n        this.setState({\n          googleID: googleid\n        })\n      }\n      else{\n        console.log(\"No googleId yet\");\n      }\n    });\n  }\n\n//====================FUNCTIONS FOR GAME====================\n//Function that handles creating a new game.  This gets passed onto CreateGame.js\n  handleCreateGame = () => {\n    //API call that creates game in database\n    API.createGame(this.state.gameName)\n      .then( res => {\n        //Sets state to gameID from newly created game\n        this.setState({\n          gameID: res.data._id\n        });\n      })\n      .then( () => this.handleTeamNameCheck());\n  }\n\n  //Function that handles capturing a new game name.  This gets passed onto CreateGame.js\n  captureGameName = (event) => {\n    let gameName = event.target.value;\n    this.setState({\n      gameName: gameName\n    })\n  };\n\n  //Function that handles capturing a typed in game ID. This gets passed onto JoinGame.js\n  handleCaptureGameID = (event) => {\n    let gameID = event.target.value;\n    this.setState({\n      gameID: gameID\n    })\n  }\n\n  //Function that handles joining a game. This is passed to JoinGame.js\n  handleJoinGame = () => {\n    //Check to see if game exists\n    API.pullGame(this.state.gameID)\n        .then(res => {\n            // console.log(res);\n            //If it does...\n            if(res) {\n              //set redirect state to true\n              this.handleTeamNameCheck();\n                \n            }//END of if(res)\n            else {\n              console.log(\"Game does not exist.  Please check ID.\");\n            }\n        })\n            \n  }\n\n//====================FUNCTIONS FOR TEAM====================\n  //Function that handles database communication when a team is created\n  handleCreateTeam = (teamName, gameID, googleID) => {\n  //API function that creates a team and associates it with a gameID\n    API.createTeam(teamName, gameID, googleID)\n      //Then takes new team record and sets teamID state to teamID in database\n      .then( res => {\n          this.setState ({\n              teamID: res.data._id\n          });\n      })\n      //Then takes gameID and teamID to add team to a game record\n      .then( () => {\n          API.insertTeam(this.state.gameID, this.state.teamID)\n      })\n      .then ( () => {\n          this.handleTeamJoinMsg();\n      })\n      //Then moves user to game as logged in\n      .then( () => this.handleLogin())\n  }\n\n\n  //Function that generates team name that doesn't exist yet\n  handleTeamNameGeneration= (dbGameID, dbTeamName) => {\n    let teamNums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n    //Loop through array of numbers until....\n    for (let i=0; i < teamNums.length; i++){\n        let teamName = \"Team\" + teamNums[i];\n        console.log(teamName);\n        if(this.state.gameID === dbGameID && teamName === dbTeamName){\n            console.log(teamName + \" already exists.\")\n        }\n        //...You reach a Teamnumber that doesn't yet exist in the database and return that\n        else{\n            console.log(\"Adding \" + teamName + \" to database\");\n            return teamName;\n        }\n    }\n  }\n\n//Function that checks to see if Team Name exists\n  handleTeamNameCheck = () => {\n    //Check to see if Team Name with matching game ID exists\n    API.pullTeam(this.state.gameID, this.state.teamName)\n    .then (res => {\n      //If it does...\n      if(res.data){\n        //Generate a new team name\n        let newTeamName = this.handleTeamNameGeneration(res.data.gameID, res.data.teamName);\n        //Set teamName state to new team name\n        this.setState ({\n            teamName: newTeamName\n        });\n        //Use new team name and game ID to create a new team record\n        this.handleCreateTeam(newTeamName, this.state.gameID, this.state.googleID)\n      }\n      //If it doesn't...\n      else {\n        //Create a team using gameID and Team 1\n        this.handleCreateTeam(this.state.teamName, this.state.gameID, this.state.googleID)\n      }\n    })\n  }\n\n  handleTeamJoinMsg = () => {\n    let message = {\n      teamName: \"GAME ANNOUNCEMENT\",\n      text: this.state.teamName + \" has joined the game.\"\n    }\n    database.push(message);\n  }\n\n  gameID = this.state.gameID\n\n  //====================FUNCTIONS FOR CHALLENGES====================\n  handleCreateChallenges = () => {\n\n\n    API.createChallenges(this.state.teamID, this.state.gameID, set)\n  }\n\n  handleRenderChallenges = () => {\n\n  }\n\n  handleUpdateChallenges = () =>{\n\n  }\n\n//====================RENDER TO PAGE====================\n  render() {\n    return (\n      <Wrapper>\n        <Router>\n          <Fragment>\n            <Switch>\n              {/* Passes along handleLogin function as a prop to CreateGame component */}\n              {/* Conditional Route that will route to Game page if logged in or CreateGame page if not logged in */}\n              <Route\n                exact\n                path=\"/\"\n                render={props =>\n                  this.state.isLoggedIn ? (\n                    <Redirect to={`/game/${this.state.gameID}/${this.state.teamName}`} />\n                  ) : (\n                    <GoogleButton \n                      {...props} \n                      gameID={this.state.gameID} \n                      handleLogin={this.handleLogin}\n                      handleTeamNameCheck={this.handleTeamNameCheck}\n                      handleGoogleCreate={this.handleGoogleCreate} />\n                  )\n                }\n              />\n              <Route\n                path=\"/game/:gameid/:teamname\"\n                render={props =>\n                  this.state.isLoggedIn ? (\n                    <Game {...props} handleLogin={this.handleLogin} />\n                  ) : (\n                    <Redirect to=\"/\" />\n                  )\n                }\n              />\n              <Route\n                exact\n                path=\"/create\"\n                render={props =>\n                  this.state.isLoggedIn ? (\n                    <Redirect to={`/game/${this.state.gameID}/${this.state.teamName}`} />\n                  ) : (\n                    <CreateGame \n                      {...props}\n                      handleCreateGame={this.handleCreateGame}\n                      captureGameName={this.captureGameName}\n                      />\n                  )\n                }\n              />\n              <Route\n                exact\n                path=\"/join\"\n                render={props =>\n                  this.state.isLoggedIn ? (\n                    <Redirect to={`/game/${this.state.gameID}/${this.state.teamName}`} />\n                  ) : (\n                    <JoinGame \n                    {...props} \n                    handleCaptureGameID={this.handleCaptureGameID}\n                    handleJoinGame={this.handleJoinGame}\n                    handleRedirect={this.handleRedirect}\n                    gameID={this.state.gameID} />\n                  )\n                }\n              />\n              />\n              <Route\n                exact\n                path=\"/logingame\"\n                render={props =>\n                  this.state.isLoggedIn ? (\n                    <Redirect to={`/game/${this.state.gameID}/${this.state.teamName}`} />\n                  ) : (\n                    <LoginGame \n                      {...props}\n                      handleCreateGame={this.handleCreateGame}\n                      captureGameName={this.captureGameName}\n                      />\n                  )\n                }\n              />\n            </Switch>\n          </Fragment>\n        </Router>\n      </Wrapper>\n    );\n  }\n} //End App component\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}