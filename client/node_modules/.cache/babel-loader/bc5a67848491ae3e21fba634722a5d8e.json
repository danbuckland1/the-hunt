{"ast":null,"code":"import _classCallCheck from \"/Users/honeylo0ksfuhnee/Documents/Rutgers_Boot_Camp/the-hunt/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/honeylo0ksfuhnee/Documents/Rutgers_Boot_Camp/the-hunt/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/honeylo0ksfuhnee/Documents/Rutgers_Boot_Camp/the-hunt/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/honeylo0ksfuhnee/Documents/Rutgers_Boot_Camp/the-hunt/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/honeylo0ksfuhnee/Documents/Rutgers_Boot_Camp/the-hunt/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/honeylo0ksfuhnee/Documents/Rutgers_Boot_Camp/the-hunt/client/src/components/TeamDash/TeamDash.js\";\nimport React, { Component, Fragment } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Challenges from \"./challenges.json\";\nimport \"./TeamDash.css\";\n\nvar TeamDash =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(TeamDash, _Component);\n\n  function TeamDash() {\n    _classCallCheck(this, TeamDash);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(TeamDash).apply(this, arguments));\n  }\n\n  _createClass(TeamDash, [{\n    key: \"componentDidMount\",\n    //Conditions for rendering this page\n    //Challenge list is being generated from a .json file, instead we will need to pull it from the database\n    //We will name Game ID\n    //We will need Team ID\n    value: function componentDidMount() {// console.log(this.props.match);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      return React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"page-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, React.createElement(\"h5\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, \"Team Dashboard\")), React.createElement(\"div\", {\n        className: \"challenges-listview\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, Challenges.map(function (Challenges) {\n        return React.createElement(\"div\", {\n          key: Challenges.id,\n          id: Challenges.id,\n          className: \"challenge-div\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 27\n          },\n          __self: this\n        }, React.createElement(Link, {\n          to: \"\".concat(_this.props.match.url, \"/\").concat(Challenges.id),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 28\n          },\n          __self: this\n        }, React.createElement(\"h6\", {\n          className: \"challenge-title\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 28\n          },\n          __self: this\n        }, Challenges.title)), React.createElement(\"p\", {\n          className: \"status\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29\n          },\n          __self: this\n        }, \"Complete: \", JSON.stringify(\"\".concat(Challenges.complete))), React.createElement(\"p\", {\n          className: \"challenge-desc\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30\n          },\n          __self: this\n        }, Challenges.description));\n      })));\n    }\n  }]);\n\n  return TeamDash;\n}(Component); //End TeamDash Component\n\n\nexport default TeamDash;","map":{"version":3,"sources":["/Users/honeylo0ksfuhnee/Documents/Rutgers_Boot_Camp/the-hunt/client/src/components/TeamDash/TeamDash.js"],"names":["React","Component","Fragment","Link","Challenges","TeamDash","map","id","props","match","url","title","JSON","stringify","complete","description"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,UAAP,MAAuB,mBAAvB;AACA,OAAO,gBAAP;;IAGMC,Q;;;;;;;;;;;;;AAEF;AACA;AACA;AACA;wCAGoB,CAChB;AACH;;;6BAEO;AAAA;;AACJ,aACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,CADJ,EAII;AAAK,QAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACCD,UAAU,CAACE,GAAX,CAAgB,UAACF,UAAD;AAAA,eACb;AAAK,UAAA,GAAG,EAAEA,UAAU,CAACG,EAArB;AAAyB,UAAA,EAAE,EAAEH,UAAU,CAACG,EAAxC;AAA4C,UAAA,SAAS,EAAC,eAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,IAAD;AAAM,UAAA,EAAE,YAAM,KAAI,CAACC,KAAL,CAAWC,KAAX,CAAiBC,GAAvB,cAA8BN,UAAU,CAACG,EAAzC,CAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAwD;AAAI,UAAA,SAAS,EAAC,iBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAiCH,UAAU,CAACO,KAA5C,CAAxD,CADJ,EAEI;AAAG,UAAA,SAAS,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAiCC,IAAI,CAACC,SAAL,WAAkBT,UAAU,CAACU,QAA7B,EAAjC,CAFJ,EAGI;AAAG,UAAA,SAAS,EAAC,gBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAA+BV,UAAU,CAACW,WAA1C,CAHJ,CADa;AAAA,OAAhB,CADD,CAJJ,CADJ;AAgBH;;;;EA7BkBd,S,GAgCtB;;;AAED,eAAeI,QAAf","sourcesContent":["import React, {Component, Fragment} from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Challenges from \"./challenges.json\";\nimport \"./TeamDash.css\";\n\n\nclass TeamDash extends Component{\n\n    //Conditions for rendering this page\n    //Challenge list is being generated from a .json file, instead we will need to pull it from the database\n    //We will name Game ID\n    //We will need Team ID\n\n\n    componentDidMount() {\n        // console.log(this.props.match);\n    }\n\n    render(){\n        return (\n            <Fragment>\n                <div className=\"page-header\">\n                    <h5>Team Dashboard</h5>\n                </div>\n                <div className=\"challenges-listview\">\n                {Challenges.map( (Challenges) => \n                    <div key={Challenges.id} id={Challenges.id} className=\"challenge-div\">\n                        <Link to={ `${this.props.match.url}/${Challenges.id}` }><h6 className=\"challenge-title\">{Challenges.title}</h6></Link>\n                        <p className=\"status\">Complete: {JSON.stringify(`${Challenges.complete}`)}</p>\n                        <p className=\"challenge-desc\">{Challenges.description}</p>\n                    </div>\n                )}\n                </div>\n            </Fragment>\n        )\n    }\n\n\n}//End TeamDash Component\n\nexport default TeamDash;\n\n"]},"metadata":{},"sourceType":"module"}