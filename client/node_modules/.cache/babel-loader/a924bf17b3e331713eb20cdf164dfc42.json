{"ast":null,"code":"import _classCallCheck from \"/Users/honeylo0ksfuhnee/Documents/Rutgers_Boot_Camp/the-hunt/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/honeylo0ksfuhnee/Documents/Rutgers_Boot_Camp/the-hunt/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/honeylo0ksfuhnee/Documents/Rutgers_Boot_Camp/the-hunt/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/honeylo0ksfuhnee/Documents/Rutgers_Boot_Camp/the-hunt/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/honeylo0ksfuhnee/Documents/Rutgers_Boot_Camp/the-hunt/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/honeylo0ksfuhnee/Documents/Rutgers_Boot_Camp/the-hunt/client/src/components/TeamDash/TeamDash.js\";\nimport React, { Component, Fragment } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Challenges from \"./challenges.json\";\nimport \"./TeamDash.css\";\n\nvar TeamDash =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(TeamDash, _Component);\n\n  function TeamDash() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, TeamDash);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(TeamDash)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.handleStatus = function (complete) {\n      if (complete) {\n        var status = \"Completed\";\n        return status;\n      } else {\n        var _status = \"Not Completed\";\n        return _status;\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(TeamDash, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {// console.log(this.props.match);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"page-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, React.createElement(\"h5\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, \"Team Dashboard\"), React.createElement(Link, {\n        to: {\n          pathname: '/route',\n          state: {\n            foo: 'bar'\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"challenges-listview\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, Challenges.map(function (Challenges) {\n        return React.createElement(\"div\", {\n          key: Challenges.id,\n          id: Challenges.id,\n          className: \"challenge-div\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34\n          },\n          __self: this\n        }, React.createElement(Link, {\n          to: {\n            pathname: \"\".concat(_this2.props.match.url, \"/\").concat(Challenges.id),\n            state: {\n              challID: \"\".concat(Challenges.id)\n            }\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35\n          },\n          __self: this\n        }, React.createElement(\"h6\", {\n          className: \"challenge-titles\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41\n          },\n          __self: this\n        }, Challenges.title)), React.createElement(\"p\", {\n          className: \"statuses\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42\n          },\n          __self: this\n        }, React.createElement(\"b\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42\n          },\n          __self: this\n        }, \"Status: \"), _this2.handleStatus(Challenges.complete)), React.createElement(\"p\", {\n          className: \"challenge-descs\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43\n          },\n          __self: this\n        }, Challenges.description));\n      })));\n    }\n  }]);\n\n  return TeamDash;\n}(Component); //End TeamDash Component\n\n\nexport default TeamDash;","map":{"version":3,"sources":["/Users/honeylo0ksfuhnee/Documents/Rutgers_Boot_Camp/the-hunt/client/src/components/TeamDash/TeamDash.js"],"names":["React","Component","Fragment","Link","Challenges","TeamDash","handleStatus","complete","status","pathname","state","foo","map","id","props","match","url","challID","title","description"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,UAAP,MAAuB,mBAAvB;AACA,OAAO,gBAAP;;IAGMC,Q;;;;;;;;;;;;;;;;;;UAKFC,Y,GAAe,UAACC,QAAD,EAAc;AACzB,UAAGA,QAAH,EAAY;AACR,YAAIC,MAAM,GAAG,WAAb;AACA,eAAOA,MAAP;AACH,OAHD,MAIK;AACD,YAAIA,OAAM,GAAG,eAAb;AACA,eAAOA,OAAP;AACH;AACJ,K;;;;;;;wCAbmB,CAChB;AACH;;;6BAaO;AAAA;;AACJ,aACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,EAEI,oBAAC,IAAD;AAAM,QAAA,EAAE,EAAE;AAAEC,UAAAA,QAAQ,EAAE,QAAZ;AAAsBC,UAAAA,KAAK,EAAE;AAAEC,YAAAA,GAAG,EAAE;AAAP;AAA7B,SAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CADJ,EAOI;AAAK,QAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACCP,UAAU,CAACQ,GAAX,CAAgB,UAACR,UAAD;AAAA,eACb;AAAK,UAAA,GAAG,EAAEA,UAAU,CAACS,EAArB;AAAyB,UAAA,EAAE,EAAET,UAAU,CAACS,EAAxC;AAA4C,UAAA,SAAS,EAAC,eAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,IAAD;AAAM,UAAA,EAAE,EACJ;AACIJ,YAAAA,QAAQ,YAAK,MAAI,CAACK,KAAL,CAAWC,KAAX,CAAiBC,GAAtB,cAA6BZ,UAAU,CAACS,EAAxC,CADZ;AAEIH,YAAAA,KAAK,EAAE;AAAEO,cAAAA,OAAO,YAAKb,UAAU,CAACS,EAAhB;AAAT;AAFX,WADJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAMA;AAAI,UAAA,SAAS,EAAC,kBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAkCT,UAAU,CAACc,KAA7C,CANA,CADJ,EAQI;AAAG,UAAA,SAAS,EAAC,UAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAxB,EAAwC,MAAI,CAACZ,YAAL,CAAkBF,UAAU,CAACG,QAA7B,CAAxC,CARJ,EASI;AAAG,UAAA,SAAS,EAAC,iBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAgCH,UAAU,CAACe,WAA3C,CATJ,CADa;AAAA,OAAhB,CADD,CAPJ,CADJ;AAyBH;;;;EA1CkBlB,S,GA6CtB;;;AAED,eAAeI,QAAf","sourcesContent":["import React, {Component, Fragment} from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Challenges from \"./challenges.json\";\nimport \"./TeamDash.css\";\n\n\nclass TeamDash extends Component{\n    componentDidMount() {\n        // console.log(this.props.match);\n    }\n\n    handleStatus = (complete) => {\n        if(complete){\n            let status = \"Completed\";\n            return status;\n        }\n        else {\n            let status = \"Not Completed\";\n            return status;\n        }\n    }\n\n    render(){\n        return (\n            <Fragment>\n                <div className=\"page-header\">\n                    <h5>Team Dashboard</h5>\n                    <Link to={{ pathname: '/route', state: { foo: 'bar'} }}\n    >\n    </Link>\n                </div>\n                <div className=\"challenges-listview\">\n                {Challenges.map( (Challenges) => \n                    <div key={Challenges.id} id={Challenges.id} className=\"challenge-div\">\n                        <Link to={\n                            {\n                                pathname: `${this.props.match.url}/${Challenges.id}`,\n                                state: { challID: `${Challenges.id}` }\n                            }\n                        }>\n                        <h6 className=\"challenge-titles\">{Challenges.title}</h6></Link>\n                        <p className=\"statuses\"><b>Status: </b>{this.handleStatus(Challenges.complete)}</p>\n                        <p className=\"challenge-descs\">{Challenges.description}</p>\n                    </div>\n                )}\n                </div>\n            </Fragment>\n        )\n    }\n\n\n}//End TeamDash Component\n\nexport default TeamDash;\n\n"]},"metadata":{},"sourceType":"module"}