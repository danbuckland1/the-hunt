{"ast":null,"code":"import _classCallCheck from \"/Users/honeylo0ksfuhnee/Documents/Rutgers_Boot_Camp/the-hunt/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/honeylo0ksfuhnee/Documents/Rutgers_Boot_Camp/the-hunt/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/honeylo0ksfuhnee/Documents/Rutgers_Boot_Camp/the-hunt/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/honeylo0ksfuhnee/Documents/Rutgers_Boot_Camp/the-hunt/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/honeylo0ksfuhnee/Documents/Rutgers_Boot_Camp/the-hunt/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/honeylo0ksfuhnee/Documents/Rutgers_Boot_Camp/the-hunt/client/src/components/JoinGame/JoinGame.js\";\nimport React, { Fragment, Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Jumbotron from \"../Jumbotron/Jumbotron\";\nimport \"../CreateGame/CreateGame.css\";\n\nvar JoinGame =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(JoinGame, _Component);\n\n  function JoinGame() {\n    _classCallCheck(this, JoinGame);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(JoinGame).apply(this, arguments));\n  }\n\n  _createClass(JoinGame, [{\n    key: \"render\",\n    //If type ID brings up a result from API.pullgame\n    //then Create a Team\n    //then Insert team into game record\n    //then move user along into the game\n    // state = {\n    //     teamID: \"\",\n    //     teamName:\"\",\n    //     redirect: false\n    // }\n    // //Function that checks to see if Team Name already exists in database\n    // handleTeamCheck= (dbGameID, dbTeamName) => {\n    //     let teamNums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n    //     //Loop through array of numbers until....\n    //     for (let i=0; i < teamNums.length; i++){\n    //         let teamName = \"Team \" + teamNums[i];\n    //         if(this.props.gameID === dbGameID && teamName === dbTeamName){\n    //             // console.log(\"Match\" + [i])\n    //         }\n    //         //...You reach a Teamnumber that doesn't yet exist in the database and return that\n    //         else{\n    //             return teamName;\n    //         }\n    //     }\n    // }\n    // //Do a Teamname and Game ID Check and generate a Team Name that doesn't exist\n    // API.pullTeam(\"Team 1\")\n    // .then (res => {\n    //     let newTeamName = this.handleTeamCheck(res.data.gameID, res.data.teamName);\n    //     this.setState ({\n    //         teamName: newTeamName\n    //     });\n    // })\n    // //Then take new Team Name in state and create a new Team with it while also associating proper gameID\n    // .then (() => {\n    //     API.createTeam(this.state.teamName, this.props.gameID)\n    //     //store resulting teamID in state\n    //     .then( res => {\n    //         this.setState ({\n    //             teamID: res.data._id\n    //         });\n    //     })\n    // })\n    // .then( () => {\n    //     API.insertTeam(this.props.gameID, this.state.teamID)\n    // })\n    value: function render() {\n      return React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(Jumbotron, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }), this.props.handleRedirect(), React.createElement(\"div\", {\n        className: \"Join\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        className: \"login-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, \"Join a Game\"), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, \"Game ID:\"), React.createElement(\"input\", {\n        className: \"form-control\",\n        id: \"game-id\",\n        onBlur: this.props.handleCaptureGameID,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        onClick: this.props.handleJoinGame,\n        type: \"button\",\n        className: \"btn btn-success\",\n        id: \"play-btn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, \"Let's Play\"), React.createElement(\"p\", {\n        className: \"login-links\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, \"Or \", React.createElement(Link, {\n        to: \"/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, \"Create a Game \"))));\n    }\n  }]);\n\n  return JoinGame;\n}(Component);\n\n;\nexport default JoinGame;","map":{"version":3,"sources":["/Users/honeylo0ksfuhnee/Documents/Rutgers_Boot_Camp/the-hunt/client/src/components/JoinGame/JoinGame.js"],"names":["React","Fragment","Component","Link","Jumbotron","JoinGame","props","handleRedirect","handleCaptureGameID","handleJoinGame"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAAyBC,SAAzB,QAA0C,OAA1C;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAO,8BAAP;;IAEMC,Q;;;;;;;;;;;;;AAEF;AACI;AACA;AACA;AACJ;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;6BAGY;AACJ,aACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEK,KAAKC,KAAL,CAAWC,cAAX,EAFL,EAGI;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAI,QAAA,SAAS,EAAC,cAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADJ,EAEQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFR,EAGQ;AAAO,QAAA,SAAS,EAAC,cAAjB;AAAgC,QAAA,EAAE,EAAC,SAAnC;AAA6C,QAAA,MAAM,EAAE,KAAKD,KAAL,CAAWE,mBAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHR,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJJ,EAMI;AAAQ,QAAA,OAAO,EAAE,KAAKF,KAAL,CAAWG,cAA5B;AAA4C,QAAA,IAAI,EAAC,QAAjD;AAA0D,QAAA,SAAS,EAAC,iBAApE;AAAsF,QAAA,EAAE,EAAC,UAAzF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBANJ,EAQI;AAAG,QAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACO,oBAAC,IAAD;AAAM,QAAA,EAAE,EAAC,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADP,CARJ,CAHJ,CADJ;AAkBH;;;;EAtEkBP,S;;AAuEtB;AAED,eAAeG,QAAf","sourcesContent":["import React, { Fragment,Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Jumbotron from \"../Jumbotron/Jumbotron\";\nimport \"../CreateGame/CreateGame.css\";\n\nclass JoinGame extends Component {\n\n    //If type ID brings up a result from API.pullgame\n        //then Create a Team\n        //then Insert team into game record\n        //then move user along into the game\n    // state = {\n    //     teamID: \"\",\n    //     teamName:\"\",\n    //     redirect: false\n    // }\n\n    // //Function that checks to see if Team Name already exists in database\n    // handleTeamCheck= (dbGameID, dbTeamName) => {\n    //     let teamNums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n    //     //Loop through array of numbers until....\n    //     for (let i=0; i < teamNums.length; i++){\n    //         let teamName = \"Team \" + teamNums[i];\n    //         if(this.props.gameID === dbGameID && teamName === dbTeamName){\n    //             // console.log(\"Match\" + [i])\n    //         }\n    //         //...You reach a Teamnumber that doesn't yet exist in the database and return that\n    //         else{\n    //             return teamName;\n    //         }\n    //     }\n    // }\n\n// //Do a Teamname and Game ID Check and generate a Team Name that doesn't exist\n// API.pullTeam(\"Team 1\")\n// .then (res => {\n//     let newTeamName = this.handleTeamCheck(res.data.gameID, res.data.teamName);\n//     this.setState ({\n//         teamName: newTeamName\n//     });\n// })\n// //Then take new Team Name in state and create a new Team with it while also associating proper gameID\n// .then (() => {\n//     API.createTeam(this.state.teamName, this.props.gameID)\n//     //store resulting teamID in state\n//     .then( res => {\n//         this.setState ({\n//             teamID: res.data._id\n//         });\n//     })\n// })\n// .then( () => {\n//     API.insertTeam(this.props.gameID, this.state.teamID)\n// })\n\n\n    render(){\n        return(\n            <Fragment>\n                <Jumbotron />\n                {this.props.handleRedirect()}\n                <div className=\"Join\">\n                    <h4 className=\"login-header\">Join a Game</h4>\n                        <label>Game ID:</label>\n                        <input className=\"form-control\" id=\"game-id\" onBlur={this.props.handleCaptureGameID}></input>\n                    <br />\n                    {/* <Link to='/auth/google'> */}\n                    <button onClick={this.props.handleJoinGame} type=\"button\" className=\"btn btn-success\" id=\"play-btn\">Let's Play</button>\n                    {/* </Link> */}\n                    <p className=\"login-links\">\n                        Or <Link to=\"/\">Create a Game </Link> \n                    </p>\n                </div>\n            </Fragment>\n        )\n    }\n};\n\nexport default JoinGame;"]},"metadata":{},"sourceType":"module"}