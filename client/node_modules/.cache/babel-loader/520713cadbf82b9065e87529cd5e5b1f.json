{"ast":null,"code":"import _classCallCheck from \"/Users/honeylo0ksfuhnee/Documents/Rutgers_Boot_Camp/the-hunt/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/honeylo0ksfuhnee/Documents/Rutgers_Boot_Camp/the-hunt/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/honeylo0ksfuhnee/Documents/Rutgers_Boot_Camp/the-hunt/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/honeylo0ksfuhnee/Documents/Rutgers_Boot_Camp/the-hunt/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/honeylo0ksfuhnee/Documents/Rutgers_Boot_Camp/the-hunt/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/honeylo0ksfuhnee/Documents/Rutgers_Boot_Camp/the-hunt/client/src/App.js\";\n//Dependencies\nimport React, { Component } from 'react';\nimport { BrowserRouter as Router, Route } from \"react-router-dom\"; //Components\n\nimport Wrapper from \"./components/Wrapper\";\nimport Activity from \"./pages/Activity\";\nimport Home from \"./pages/Home\";\nimport Jumbotron from \"./components/Jumbotron\"; //Create/Join/Login form components\n\nimport CreateGame from \"./components/CreateGame\";\nimport JoinGame from \"./components/JoinGame\";\nimport LoginGame from \"./components/LoginGame\"; //Google Button\n\nimport GoogleButton from \"./components/GoogleButton\"; //CSS file\n\nimport './App.css';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      isLoggedIn: false //KE Note: Temporary function that will change isLoggedIn state to true when called on.  We can change this later on.\n\n    };\n\n    _this.handleLogin = function () {\n      _this.setState({\n        isLoggedIn: true\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      //Conditional rendering\n      //If state is logged in then render the Activity Stream page\n      if (this.state.isLoggedIn) {\n        return React.createElement(Wrapper, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41\n          },\n          __self: this\n        }, React.createElement(Activity, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42\n          },\n          __self: this\n        }));\n      } //If state is NOT logged in then render homepage (with the logins)\n      else {\n          return React.createElement(Wrapper, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 50\n            },\n            __self: this\n          }, React.createElement(Home, {\n            handleLogin: this.handleLogin,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 61\n            },\n            __self: this\n          }));\n        }\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/honeylo0ksfuhnee/Documents/Rutgers_Boot_Camp/the-hunt/client/src/App.js"],"names":["React","Component","BrowserRouter","Router","Route","Wrapper","Activity","Home","Jumbotron","CreateGame","JoinGame","LoginGame","GoogleButton","App","state","isLoggedIn","handleLogin","setState"],"mappings":";;;;;;AAAA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,KAAlC,QAA+C,kBAA/C,C,CACA;;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,QAAP,MAAqB,kBAArB;AACA,OAAOC,IAAP,MAAiB,cAAjB;AACA,OAAOC,SAAP,MAAsB,wBAAtB,C,CACA;;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,SAAP,MAAsB,wBAAtB,C,CACA;;AACA,OAAOC,YAAP,MAAyB,2BAAzB,C,CACA;;AACA,OAAO,WAAP;;IAKMC,G;;;;;;;;;;;;;;;;;UAGFC,K,GAAQ;AACNC,MAAAA,UAAU,EAAE,KADN,CAIV;;AAJU,K;;UAKTC,W,GAAc,YAAM;AACnB,YAAKC,QAAL,CAAc;AACZF,QAAAA,UAAU,EAAE;AADA,OAAd;AAGD,K;;;;;;;6BAGQ;AACP;AACA;AACA,UAAG,KAAKD,KAAL,CAAWC,UAAd,EAAyB;AACvB,eACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,CADF;AAMD,OAPD,CAQA;AARA,WASK;AACH,iBACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAWE,oBAAC,IAAD;AAAM,YAAA,WAAW,EAAE,KAAKC,WAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAXF,CADF;AAeD;AACF;;;;EA5Cef,S;;AA+ClB,eAAeY,GAAf","sourcesContent":["//Dependencies\nimport React, { Component } from 'react';\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\n//Components\nimport Wrapper from \"./components/Wrapper\";\nimport Activity from \"./pages/Activity\";\nimport Home from \"./pages/Home\";\nimport Jumbotron from \"./components/Jumbotron\";\n//Create/Join/Login form components\nimport CreateGame from \"./components/CreateGame\";\nimport JoinGame from \"./components/JoinGame\";\nimport LoginGame from \"./components/LoginGame\";\n//Google Button\nimport GoogleButton from \"./components/GoogleButton\";\n//CSS file\nimport './App.css';\n\n\n\n\nclass App extends Component {\n    //sets state of app to not logged in by default\n    //KE Note: This is a temporary setup to test and see that the right page renders when a user is logged in.  We can change the setup as we incorporate authentication\n    state = {\n      isLoggedIn: false\n  }\n\n  //KE Note: Temporary function that will change isLoggedIn state to true when called on.  We can change this later on.\n   handleLogin = () => {\n    this.setState({\n      isLoggedIn: true\n    });\n  }\n\n\n  render() {\n    //Conditional rendering\n    //If state is logged in then render the Activity Stream page\n    if(this.state.isLoggedIn){\n      return (\n        <Wrapper>\n          <Activity />\n        </Wrapper>\n      );\n\n    }\n    //If state is NOT logged in then render homepage (with the logins)\n    else {\n      return (\n        <Wrapper>\n        {/* <Jumbotron /> */}\n        {/* <Router> */}\n          {/* <div className=\"dynamicForm\"> */}\n          {/* Passes along handleLogin function as a prop to CreateGame component */}\n          {/* <Route exact path=\"/\" render = {() => <CreateGame action={this.handleLogin}/> }/> */}\n          {/* <Route exact path=\"/join\" render = {() => <JoinGame action={this.handleLogin}/> }/> */}\n          {/* <Route exact path=\"/login\" render = {() => <LoginGame action={this.handleLogin}/> }/> */}\n          {/* <Route exact path=\"/auth/google\" render = {() => <GoogleButton action={this.handleauth}/> }/> */}\n          {/* </div> */}\n        {/* </Router> */}\n          <Home handleLogin={this.handleLogin}/>\n        </Wrapper>\n      );\n    }\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}