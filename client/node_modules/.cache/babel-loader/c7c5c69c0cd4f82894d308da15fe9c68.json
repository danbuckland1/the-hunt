{"ast":null,"code":"import _classCallCheck from \"/Users/honeylo0ksfuhnee/Documents/Rutgers_Boot_Camp/the-hunt/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/honeylo0ksfuhnee/Documents/Rutgers_Boot_Camp/the-hunt/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/honeylo0ksfuhnee/Documents/Rutgers_Boot_Camp/the-hunt/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/honeylo0ksfuhnee/Documents/Rutgers_Boot_Camp/the-hunt/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/honeylo0ksfuhnee/Documents/Rutgers_Boot_Camp/the-hunt/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/honeylo0ksfuhnee/Documents/Rutgers_Boot_Camp/the-hunt/client/src/App.js\";\n//Dependencies\nimport React, { Component, Fragment } from \"react\";\nimport { BrowserRouter as Router, Route, Switch, Redirect } from \"react-router-dom\"; //Components\n\nimport Wrapper from \"./components/Wrapper\"; //Create/Join/Login form components\n\nimport CreateGame from \"./components/CreateGame\";\nimport JoinGame from \"./components/JoinGame\";\nimport LoginGame from \"./components/LoginGame\"; //Pages\n\nimport Game from \"./pages/Game\"; //Google Button\n\nimport GoogleButton from \"./components/GoogleButton\"; //CSS file\n\nimport \"./App.css\";\nimport API from \"./utils/API\";\nimport fire from \"./firebase.js\";\nvar database = fire.database().ref(\"log\");\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      isLoggedIn: false,\n      gameName: \"\",\n      gameID: \"\",\n      teamName: \"Team1\",\n      teamID: \"\",\n      googleID: \"\",\n      redirect: false\n    };\n\n    _this.handleLogin = function () {\n      _this.setState({\n        isLoggedIn: true\n      });\n    };\n\n    _this.handleGoogleCreate = function () {\n      API.createGoogleUser().then(function (res) {\n        console.log(res); // this.setState ({\n        //   teamID: res.data.googleId\n        // })\n      });\n    };\n\n    _this.handleCreateGame = function () {\n      //API call that creates game in database\n      API.createGame(_this.state.gameName).then(function (res) {\n        //Sets state to gameID from newly created game\n        _this.setState({\n          gameID: res.data._id\n        });\n      });\n    };\n\n    _this.captureGameName = function (event) {\n      var gameName = event.target.value;\n\n      _this.setState({\n        gameName: gameName\n      });\n    };\n\n    _this.handleCaptureGameID = function (event) {\n      var gameID = event.target.value;\n\n      _this.setState({\n        gameID: gameID\n      });\n    };\n\n    _this.handleJoinGame = function () {\n      //Check to see if game exists\n      API.pullGame(_this.state.gameID).then(function (res) {\n        // console.log(res);\n        //If it does...\n        if (res) {\n          //set redirect state to true\n          _this.setState({\n            redirect: true\n          });\n        } //END of if(res)\n        else {\n            console.log(\"Game does not exist.  Please check ID.\");\n          }\n      });\n    };\n\n    _this.handleRedirect = function () {\n      if (_this.state.redirect) {\n        return React.createElement(Redirect, {\n          to: \"/auth/google\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 118\n          },\n          __self: this\n        });\n      }\n    };\n\n    _this.handleCreateTeam = function (teamName, gameID) {\n      //API function that creates a team and associates it with a gameID\n      API.createTeam(teamName, gameID) //Then takes new team record and sets teamID state to teamID in database\n      .then(function (res) {\n        _this.setState({\n          teamID: res.data._id\n        });\n      }) //Then takes gameID and teamID to add team to a game record\n      .then(function () {\n        API.insertTeam(_this.state.gameID, _this.state.teamID);\n      }).then(function () {\n        _this.handleTeamJoinMsg();\n      }) //Then moves user to game as logged in\n      .then(function () {\n        return _this.handleLogin();\n      });\n    };\n\n    _this.handleTeamNameGeneration = function (dbGameID, dbTeamName) {\n      var teamNums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]; //Loop through array of numbers until....\n\n      for (var i = 0; i < teamNums.length; i++) {\n        var teamName = \"Team\" + teamNums[i];\n        console.log(teamName);\n\n        if (_this.state.gameID === dbGameID && teamName === dbTeamName) {\n          console.log(teamName + \" already exists.\");\n        } //...You reach a Teamnumber that doesn't yet exist in the database and return that\n        else {\n            console.log(\"Adding \" + teamName + \" to database\");\n            return teamName;\n          }\n      }\n    };\n\n    _this.handleTeamNameCheck = function () {\n      //Check to see if Team Name with matching game ID exists\n      API.pullTeam(_this.state.gameID, _this.state.teamName).then(function (res) {\n        //If it does...\n        if (res.data) {\n          //Generate a new team name\n          var newTeamName = _this.handleTeamNameGeneration(res.data.gameID, res.data.teamName); //Set teamName state to new team name\n\n\n          _this.setState({\n            teamName: newTeamName\n          }); //Use new team name and game ID to create a new team record\n\n\n          _this.handleCreateTeam(newTeamName, _this.state.gameID);\n        } //If it doesn't...\n        else {\n            //Create a team using gameID and Team 1\n            _this.handleCreateTeam(_this.state.teamName, _this.state.gameID);\n          }\n      });\n    };\n\n    _this.handleTeamJoinMsg = function () {\n      var message = {\n        teamName: \"GAME ANNOUNCEMENT\",\n        text: _this.state.teamName + \" has joined the game.\"\n      };\n      database.push(message);\n    };\n\n    _this.gameID = _this.state.gameID;\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      API.authenticate().then(function (res) {\n        console.log(\"googleID: \" + res.data.user.googleId);\n\n        _this2.setState({\n          googleID: res.data.user.googleId\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render(gameID) {\n      var _this3 = this;\n\n      return React.createElement(Wrapper, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      }, React.createElement(Router, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      }, React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }, React.createElement(Switch, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      }, React.createElement(Route, {\n        exact: true,\n        path: \"/\",\n        render: function render(props) {\n          return _this3.state.isLoggedIn ? React.createElement(Redirect, {\n            to: \"/game/\".concat(_this3.state.gameID, \"/\").concat(_this3.state.teamName),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 209\n            },\n            __self: this\n          }) : React.createElement(GoogleButton, Object.assign({}, props, {\n            gameID: _this3.state.gameID,\n            handleLogin: _this3.handleLogin,\n            handleTeamNameCheck: _this3.handleTeamNameCheck,\n            handleGoogleCreate: _this3.handleGoogleCreate,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 211\n            },\n            __self: this\n          }));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/game/:gameid/:teamname\",\n        render: function render(props) {\n          return _this3.state.isLoggedIn ? React.createElement(Game, Object.assign({}, props, {\n            handleLogin: _this3.handleLogin,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 224\n            },\n            __self: this\n          })) : React.createElement(Redirect, {\n            to: \"/\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 226\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220\n        },\n        __self: this\n      }), React.createElement(Route, {\n        exact: true,\n        path: \"/create\",\n        render: function render(props) {\n          return _this3.state.isLoggedIn ? React.createElement(Redirect, {\n            to: \"/game/\".concat(_this3.state.gameID, \"/\").concat(_this3.state.teamName),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 235\n            },\n            __self: this\n          }) : React.createElement(CreateGame, Object.assign({}, props, {\n            handleCreateGame: _this3.handleCreateGame,\n            captureGameName: _this3.captureGameName,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 237\n            },\n            __self: this\n          }));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        },\n        __self: this\n      }), React.createElement(Route, {\n        exact: true,\n        path: \"/join\",\n        render: function render(props) {\n          return _this3.state.isLoggedIn ? React.createElement(Redirect, {\n            to: \"/game/\".concat(_this3.state.gameID, \"/\").concat(_this3.state.teamName),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 250\n            },\n            __self: this\n          }) : React.createElement(JoinGame, Object.assign({}, props, {\n            handleCaptureGameID: _this3.handleCaptureGameID,\n            handleJoinGame: _this3.handleJoinGame,\n            handleRedirect: _this3.handleRedirect,\n            gameID: _this3.state.gameID,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 252\n            },\n            __self: this\n          }));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245\n        },\n        __self: this\n      }), \"/>\", React.createElement(Route, {\n        exact: true,\n        path: \"/logingame\",\n        render: function render(props) {\n          return _this3.state.isLoggedIn ? React.createElement(Redirect, {\n            to: \"/game/\".concat(_this3.state.gameID, \"/\").concat(_this3.state.teamName),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 267\n            },\n            __self: this\n          }) : React.createElement(LoginGame, Object.assign({}, props, {\n            handleCreateGame: _this3.handleCreateGame,\n            captureGameName: _this3.captureGameName,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 269\n            },\n            __self: this\n          }));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262\n        },\n        __self: this\n      })))));\n    }\n  }]);\n\n  return App;\n}(Component); //End App component\n\n\nexport default App;","map":{"version":3,"sources":["/Users/honeylo0ksfuhnee/Documents/Rutgers_Boot_Camp/the-hunt/client/src/App.js"],"names":["React","Component","Fragment","BrowserRouter","Router","Route","Switch","Redirect","Wrapper","CreateGame","JoinGame","LoginGame","Game","GoogleButton","API","fire","database","ref","App","state","isLoggedIn","gameName","gameID","teamName","teamID","googleID","redirect","handleLogin","setState","handleGoogleCreate","createGoogleUser","then","res","console","log","handleCreateGame","createGame","data","_id","captureGameName","event","target","value","handleCaptureGameID","handleJoinGame","pullGame","handleRedirect","handleCreateTeam","createTeam","insertTeam","handleTeamJoinMsg","handleTeamNameGeneration","dbGameID","dbTeamName","teamNums","i","length","handleTeamNameCheck","pullTeam","newTeamName","message","text","push","authenticate","user","googleId","props"],"mappings":"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","sourcesContent":["//Dependencies\nimport React, { Component, Fragment } from \"react\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n  Redirect\n} from \"react-router-dom\";\n//Components\nimport Wrapper from \"./components/Wrapper\";\n//Create/Join/Login form components\nimport CreateGame from \"./components/CreateGame\";\nimport JoinGame from \"./components/JoinGame\";\nimport LoginGame from \"./components/LoginGame\";\n//Pages\nimport Game from \"./pages/Game\";\n//Google Button\nimport GoogleButton from \"./components/GoogleButton\";\n//CSS file\nimport \"./App.css\";\nimport API from \"./utils/API\";\nimport fire from \"./firebase.js\";\n\nconst database = fire.database().ref(\"log\");\n\nclass App extends Component {\n  //sets state of app to not logged in by default\n  //KE Note: This is a temporary setup to test and see that the right page renders when a user is logged in.  We can change the setup as we incorporate authentication\n  state = {\n    isLoggedIn: false,\n    gameName: \"\",\n    gameID: \"\",\n    teamName: \"Team1\",\n    teamID:\"\",\n    googleID:\"\",\n    redirect: false\n  };\n\ncomponentDidMount(){\n  API.authenticate()\n  .then( res => {\n    console.log(\"googleID: \" + res.data.user.googleId)\n    this.setState({\n      googleID: res.data.user.googleId\n    })\n  });\n\n};\n  //KE Note: Temporary function that will change isLoggedIn state to true when called on.  We can change this later on.\n  handleLogin = () => {\n    this.setState({\n      isLoggedIn: true\n    });\n  };\n\n  handleGoogleCreate = () => {\n    API.createGoogleUser()\n    .then( (res) => {\n      console.log(res);\n      // this.setState ({\n      //   teamID: res.data.googleId\n      // })\n    });\n  }\n\n//Function that handles creating a new game.  This gets passed onto CreateGame.js\n  handleCreateGame = () => {\n    //API call that creates game in database\n    API.createGame(this.state.gameName)\n      .then( res => {\n        //Sets state to gameID from newly created game\n        this.setState({\n          gameID: res.data._id\n        });\n      });\n  }\n\n  //Function that handles capturing a new game name.  This gets passed onto CreateGame.js\n  captureGameName = (event) => {\n    let gameName = event.target.value;\n    this.setState({\n      gameName: gameName\n    })\n  };\n\n  //Function that handles capturing a typed in game ID. This gets passed onto JoinGame.js\n  handleCaptureGameID = (event) => {\n    let gameID = event.target.value;\n    this.setState({\n      gameID: gameID\n    })\n  }\n\n  //Function that handles joining a game. This is passed to JoinGame.js\n  handleJoinGame = () => {\n    //Check to see if game exists\n    API.pullGame(this.state.gameID)\n        .then(res => {\n            // console.log(res);\n            //If it does...\n            if(res) {\n              //set redirect state to true\n              this.setState({\n                redirect: true\n              })\n                \n            }//END of if(res)\n            else {\n              console.log(\"Game does not exist.  Please check ID.\");\n            }\n        })\n            \n  }\n  \n  //Function that redirects user if redirect state is set to true.  This is passed to JoinGame.js\n  handleRedirect = () => {\n    if (this.state.redirect){\n        return <Redirect to=\"/auth/google\" />\n     }\n  };\n\n  //Function that handles database communication when a team is created\n  handleCreateTeam = (teamName, gameID) => {\n  //API function that creates a team and associates it with a gameID\n    API.createTeam(teamName, gameID)\n      //Then takes new team record and sets teamID state to teamID in database\n      .then( res => {\n          this.setState ({\n              teamID: res.data._id\n          });\n      })\n      //Then takes gameID and teamID to add team to a game record\n      .then( () => {\n          API.insertTeam(this.state.gameID, this.state.teamID)\n      })\n      .then ( () => {\n          this.handleTeamJoinMsg();\n      })\n      //Then moves user to game as logged in\n      .then( () => this.handleLogin())\n  }\n\n\n  //Function that generates team name that doesn't exist yet\n  handleTeamNameGeneration= (dbGameID, dbTeamName) => {\n    let teamNums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n    //Loop through array of numbers until....\n    for (let i=0; i < teamNums.length; i++){\n        let teamName = \"Team\" + teamNums[i];\n        console.log(teamName);\n        if(this.state.gameID === dbGameID && teamName === dbTeamName){\n            console.log(teamName + \" already exists.\")\n        }\n        //...You reach a Teamnumber that doesn't yet exist in the database and return that\n        else{\n            console.log(\"Adding \" + teamName + \" to database\");\n            return teamName;\n        }\n    }\n  }\n\n//Function that checks to see if Team Name exists\n  handleTeamNameCheck = () => {\n    //Check to see if Team Name with matching game ID exists\n    API.pullTeam(this.state.gameID, this.state.teamName)\n    .then (res => {\n      //If it does...\n      if(res.data){\n        //Generate a new team name\n        let newTeamName = this.handleTeamNameGeneration(res.data.gameID, res.data.teamName);\n        //Set teamName state to new team name\n        this.setState ({\n            teamName: newTeamName\n        });\n        //Use new team name and game ID to create a new team record\n        this.handleCreateTeam(newTeamName, this.state.gameID)\n      }\n      //If it doesn't...\n      else {\n        //Create a team using gameID and Team 1\n        this.handleCreateTeam(this.state.teamName, this.state.gameID)\n      }\n    })\n  }\n\n  handleTeamJoinMsg = () => {\n    let message = {\n      teamName: \"GAME ANNOUNCEMENT\",\n      text: this.state.teamName + \" has joined the game.\"\n    }\n    database.push(message);\n  }\n\n  gameID = this.state.gameID\n\n  render(gameID) {\n    return (\n      <Wrapper>\n        <Router>\n          <Fragment>\n            <Switch>\n              {/* Passes along handleLogin function as a prop to CreateGame component */}\n              {/* Conditional Route that will route to Game page if logged in or CreateGame page if not logged in */}\n              <Route\n                exact\n                path=\"/\"\n                render={props =>\n                  this.state.isLoggedIn ? (\n                    <Redirect to={`/game/${this.state.gameID}/${this.state.teamName}`} />\n                  ) : (\n                    <GoogleButton \n                      {...props} \n                      gameID={this.state.gameID} \n                      handleLogin={this.handleLogin}\n                      handleTeamNameCheck={this.handleTeamNameCheck}\n                      handleGoogleCreate={this.handleGoogleCreate} />\n                  )\n                }\n              />\n              <Route\n                path=\"/game/:gameid/:teamname\"\n                render={props =>\n                  this.state.isLoggedIn ? (\n                    <Game {...props} handleLogin={this.handleLogin} />\n                  ) : (\n                    <Redirect to=\"/\" />\n                  )\n                }\n              />\n              <Route\n                exact\n                path=\"/create\"\n                render={props =>\n                  this.state.isLoggedIn ? (\n                    <Redirect to={`/game/${this.state.gameID}/${this.state.teamName}`} />\n                  ) : (\n                    <CreateGame \n                      {...props}\n                      handleCreateGame={this.handleCreateGame}\n                      captureGameName={this.captureGameName}\n                      />\n                  )\n                }\n              />\n              <Route\n                exact\n                path=\"/join\"\n                render={props =>\n                  this.state.isLoggedIn ? (\n                    <Redirect to={`/game/${this.state.gameID}/${this.state.teamName}`} />\n                  ) : (\n                    <JoinGame \n                    {...props} \n                    handleCaptureGameID={this.handleCaptureGameID}\n                    handleJoinGame={this.handleJoinGame}\n                    handleRedirect={this.handleRedirect}\n                    gameID={this.state.gameID} />\n                  )\n                }\n              />\n              />\n              <Route\n                exact\n                path=\"/logingame\"\n                render={props =>\n                  this.state.isLoggedIn ? (\n                    <Redirect to={`/game/${this.state.gameID}/${this.state.teamName}`} />\n                  ) : (\n                    <LoginGame \n                      {...props}\n                      handleCreateGame={this.handleCreateGame}\n                      captureGameName={this.captureGameName}\n                      />\n                  )\n                }\n              />\n            </Switch>\n          </Fragment>\n        </Router>\n      </Wrapper>\n    );\n  }\n} //End App component\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}