{"ast":null,"code":"import _classCallCheck from \"/Users/honeylo0ksfuhnee/Documents/Rutgers_Boot_Camp/the-hunt/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/honeylo0ksfuhnee/Documents/Rutgers_Boot_Camp/the-hunt/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/honeylo0ksfuhnee/Documents/Rutgers_Boot_Camp/the-hunt/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/honeylo0ksfuhnee/Documents/Rutgers_Boot_Camp/the-hunt/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/honeylo0ksfuhnee/Documents/Rutgers_Boot_Camp/the-hunt/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/honeylo0ksfuhnee/Documents/Rutgers_Boot_Camp/the-hunt/client/src/pages/Activity.js\";\nimport React, { Component, Fragment } from \"react\";\nimport fire from \"../firebase.js\";\nimport Navbar from \"../components/Navbar\";\nimport StreamChat from \"../components/StreamChat\"; //references the firebase database\n\nvar database = fire.database().ref(\"log\");\n\nvar Activity =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Activity, _Component);\n\n  function Activity() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Activity);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Activity)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      team: \"\",\n      txt: \"\",\n      chatHistory: {} //Will update chatHistory state when component mounts\n      //This will create an object that gets passed along to the StreamChat component \n\n    };\n\n    _this.captureTeam = function (event) {\n      var team = event.target.value; //adds username to the state\n\n      _this.setState({\n        team: team\n      });\n    };\n\n    _this.captureMsg = function (event) {\n      var txt = event.target.value; //adds message to the state\n\n      _this.setState({\n        txt: txt\n      });\n    };\n\n    _this.handleMsgSubmit = function (event) {\n      event.preventDefault(); //Create chat object that will take the username/text from the state\n\n      var message = {\n        teamName: _this.state.team,\n        text: _this.state.txt\n      }; //pushes message object to firebase\n\n      database.push(message); //clears the state for future messages\n\n      _this.setState({\n        team: \"\",\n        txt: \"\"\n      });\n\n      console.log(\"submitted!\");\n    };\n\n    return _this;\n  }\n\n  _createClass(Activity, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount(props) {\n      var _this2 = this;\n\n      //Pulls snapshot of firebase\n      database.on(\"value\", function (snapshot) {\n        var log = snapshot.val();\n        var keys = Object.keys(log); //Array that will hold the chat history\n\n        var newChatHistory = [];\n\n        for (var i = 0; i < keys.length; i++) {\n          var k = keys[i];\n          var teamName = log[k].teamName;\n          var text = log[k].text; //Add messages to chatHistory array\n\n          newChatHistory.push({\n            id: k,\n            teamName: teamName,\n            text: text\n          });\n        } //Update state to match the chatHistory\n\n\n        _this2.setState({\n          chatHistory: newChatHistory\n        }); //Log what state looks like in console\n        // console.log(this.state.chatHistory);\n\n      });\n    } //Captures Username from input field\n\n  }, {\n    key: \"render\",\n    //Renders to page\n    value: function render(props) {\n      return React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, React.createElement(Navbar, {\n        match: this.props.match,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"game-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, React.createElement(\"h5\", {\n        className: \"game-name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, \"Game Name (ID#)\"), React.createElement(\"p\", {\n        className: \"team-greet\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, \"Welcome Team 1\"), React.createElement(\"p\", {\n        className: \"time\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, \"Time Remaining:\"), \" 00:00:00\")), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"page-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, React.createElement(\"h5\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, \"Activity Stream\")), React.createElement(StreamChat, {\n        captureUser: this.captureTeam,\n        captureMsg: this.captureMsg,\n        handleMsgSubmit: this.handleMsgSubmit,\n        details: this.state.chatHistory,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Activity;\n}(Component); //End Activity Class\n\n\nexport default Activity;","map":{"version":3,"sources":["/Users/honeylo0ksfuhnee/Documents/Rutgers_Boot_Camp/the-hunt/client/src/pages/Activity.js"],"names":["React","Component","Fragment","fire","Navbar","StreamChat","database","ref","Activity","state","team","txt","chatHistory","captureTeam","event","target","value","setState","captureMsg","handleMsgSubmit","preventDefault","message","teamName","text","push","console","log","props","on","snapshot","val","keys","Object","newChatHistory","i","length","k","id","match"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from \"react\";\nimport fire from \"../firebase.js\";\nimport Navbar from \"../components/Navbar\";\nimport StreamChat from \"../components/StreamChat\";\n\n//references the firebase database\nconst database = fire.database().ref(\"log\");\n\n\nclass Activity extends Component {\n    //Sets State\n    state = {\n        team: \"\",\n        txt: \"\",\n        chatHistory: {}\n    }\n    \n\n    //Will update chatHistory state when component mounts\n    //This will create an object that gets passed along to the StreamChat component \n    componentDidMount(props) {\n        //Pulls snapshot of firebase\n        database.on(\"value\", snapshot => {\n            let log = snapshot.val();\n            let keys = Object.keys(log);\n            //Array that will hold the chat history\n            let newChatHistory = [];\n            for (let i = 0; i < keys.length; i++) {\n                let k = keys[i];\n                let teamName = log[k].teamName;\n                let text = log[k].text;\n                //Add messages to chatHistory array\n                newChatHistory.push({\n                    id: k,\n                    teamName: teamName,\n                    text: text\n                });\n            }\n            //Update state to match the chatHistory\n            this.setState({\n                chatHistory: newChatHistory\n            })\n            //Log what state looks like in console\n            // console.log(this.state.chatHistory);\n        });\n    }\n\n\n    //Captures Username from input field\n    captureTeam = (event) => \n    {\n        let team = event.target.value;\n        //adds username to the state\n        this.setState({\n            team: team\n        });\n    };\n\n    //Captures Message from input field\n    captureMsg = (event) => \n    {\n        let txt = event.target.value;\n        //adds message to the state\n        this.setState({\n            txt: txt\n        }); \n    };\n\n\n    //Takes captured team/message and sends it to firebase\n    handleMsgSubmit = (event) => {\n        event.preventDefault();\n        //Create chat object that will take the username/text from the state\n        let message = {\n            teamName: this.state.team,\n            text: this.state.txt\n        };\n        //pushes message object to firebase\n        database.push(message);\n        //clears the state for future messages\n        this.setState({\n            team: \"\",\n            txt: \"\"\n        });\n        console.log(\"submitted!\");\n    };\n    \n  \n    //Renders to page\n    render(props){\n        return (\n            <Fragment>\n                <Navbar match={this.props.match} />\n                 <div className=\"game-header\">\n                     <h5 className=\"game-name\">Game Name (ID#)</h5>\n                     <p className=\"team-greet\">Welcome Team 1</p>\n                     <p className=\"time\"><b>Time Remaining:</b> 00:00:00</p>\n                 </div>\n                 <hr />\n                 <div className=\"page-header\">\n                    <h5>Activity Stream</h5>\n                 </div>\n                    <StreamChat\n                        captureUser={this.captureTeam}\n                        captureMsg={this.captureMsg} \n                        handleMsgSubmit={this.handleMsgSubmit}\n                        details={this.state.chatHistory}\n                        />\n            </Fragment>\n        );\n    };\n\n\n\n}//End Activity Class\n\nexport default Activity;"]},"metadata":{},"sourceType":"module"}